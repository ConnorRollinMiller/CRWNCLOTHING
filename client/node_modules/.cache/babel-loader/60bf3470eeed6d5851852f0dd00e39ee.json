{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/connormiller/Projects/Web/clothingstoreapp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/src/components/collection-item/CollectionItem.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n   width: 100%;\\n   height: 95%;\\n   background-size: cover;\\n   background-position: center;\\n   margin-bottom: 5px;\\n   background-image: \", \";\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n   width: 80%;\\n   opacity: 0.7;\\n   position: absolute;\\n   top: 255px;\\n   display: none;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n   width: 22vw;\\n   display: flex;\\n   flex-direction: column;\\n   height: 350px;\\n   align-items: center;\\n   position: relative;\\n\\n   &:hover {\\n      .image {\\n         opacity: 0.8;\\n      }\\n\\n      button {\\n         opacity: 0.85;\\n         display: flex;\\n      }\\n   }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport Button from '../button/Button';\nimport { addItem } from '../../redux/actions/cartActions';\nconst CollectionItemContainer = styled.div(_templateObject());\nconst AddButton = styled(Button)(_templateObject2());\nconst BackgroundImage = styled.div(_templateObject3(), ({\n  imageUrl\n}) => \"url(\".concat(imageUrl, \")\"));\n\nconst CollectionItem = ({\n  addItemToCart,\n  item\n}) => {\n  const name = item.name,\n        price = item.price,\n        imageUrl = item.imageUrl;\n  return React.createElement(CollectionItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(BackgroundImage, {\n    className: \"image\",\n    imageUrl: imageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"$\", price)), React.createElement(AddButton, {\n    inverted: true,\n    onClick: () => addItemToCart(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"ADD TO CART\"));\n};\n\nCollectionItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  addItemToCart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItemToCart: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/components/collection-item/CollectionItem.js"],"names":["React","PropTypes","styled","connect","Button","addItem","CollectionItemContainer","div","AddButton","BackgroundImage","imageUrl","CollectionItem","addItemToCart","item","name","price","propTypes","object","isRequired","func","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,OAAT,QAAwB,iCAAxB;AAEA,MAAMC,uBAAuB,GAAGJ,MAAM,CAACK,GAAV,mBAA7B;AAoBA,MAAMC,SAAS,GAAGN,MAAM,CAACE,MAAD,CAAT,oBAAf;AAQA,MAAMK,eAAe,GAAGP,MAAM,CAACK,GAAV,qBAME,CAAC;AAAEG,EAAAA;AAAF,CAAD,mBAAyBA,QAAzB,MANF,CAArB;;AASA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AAAA,QACzCC,IADyC,GACfD,IADe,CACzCC,IADyC;AAAA,QACnCC,KADmC,GACfF,IADe,CACnCE,KADmC;AAAA,QAC5BL,QAD4B,GACfG,IADe,CAC5BH,QAD4B;AAGjD,SACG,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAEA,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBI,IAAxB,CADH,EAEG;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0BC,KAA1B,CAFH,CAFH,EAMG,oBAAC,SAAD;AAAW,IAAA,QAAQ,MAAnB;AAAoB,IAAA,OAAO,EAAE,MAAMH,aAAa,CAACC,IAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANH,CADH;AAYF,CAfD;;AAiBAF,cAAc,CAACK,SAAf,GAA2B;AACxBH,EAAAA,IAAI,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UADC;AAExBN,EAAAA,aAAa,EAAEX,SAAS,CAACkB,IAAV,CAAeD;AAFN,CAA3B;;AAKA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACrCT,EAAAA,aAAa,EAAEC,IAAI,IAAIQ,QAAQ,CAAChB,OAAO,CAACQ,IAAD,CAAR;AADM,CAAL,CAAnC;;AAIA,eAAeV,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCT,cAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport Button from '../button/Button';\n\nimport { addItem } from '../../redux/actions/cartActions';\n\nconst CollectionItemContainer = styled.div`\n   width: 22vw;\n   display: flex;\n   flex-direction: column;\n   height: 350px;\n   align-items: center;\n   position: relative;\n\n   &:hover {\n      .image {\n         opacity: 0.8;\n      }\n\n      button {\n         opacity: 0.85;\n         display: flex;\n      }\n   }\n`;\n\nconst AddButton = styled(Button)`\n   width: 80%;\n   opacity: 0.7;\n   position: absolute;\n   top: 255px;\n   display: none;\n`;\n\nconst BackgroundImage = styled.div`\n   width: 100%;\n   height: 95%;\n   background-size: cover;\n   background-position: center;\n   margin-bottom: 5px;\n   background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nconst CollectionItem = ({ addItemToCart, item }) => {\n   const { name, price, imageUrl } = item;\n\n   return (\n      <CollectionItemContainer>\n         <BackgroundImage className='image' imageUrl={imageUrl} />\n         <div className='collection-footer'>\n            <span className='name'>{name}</span>\n            <span className='price'>${price}</span>\n         </div>\n         <AddButton inverted onClick={() => addItemToCart(item)}>\n            ADD TO CART\n         </AddButton>\n      </CollectionItemContainer>\n   );\n};\n\nCollectionItem.propTypes = {\n   item: PropTypes.object.isRequired,\n   addItemToCart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n   addItemToCart: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"]},"metadata":{},"sourceType":"module"}