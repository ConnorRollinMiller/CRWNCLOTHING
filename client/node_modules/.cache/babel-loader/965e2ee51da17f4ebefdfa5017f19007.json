{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/utils';\nimport { fetchCollectionSuccess, fetchCollectionsFailure } from '../actions/shopActions';\nimport { ShopActionTypes } from '../types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/redux/sagas/shopSagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SACGC,SADH,EAEGC,+BAFH,QAGO,sBAHP;AAKA,SACGC,sBADH,EAEGC,uBAFH,QAGO,wBAHP;AAIA,SAASC,eAAT,QAAgC,UAAhC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACtC,MAAI;AACD,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC9BG,+BAD8B,EAE9BO,QAF8B,CAAjC;AAKA,UAAMT,GAAG,CAACG,sBAAsB,CAACQ,cAAD,CAAvB,CAAT;AACF,GATD,CASE,OAAOC,GAAP,EAAY;AACX,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,GAAG,CAACC,OAAL,CAAxB,CAAT;AACF;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMhB,SAAS,CACZO,eAAe,CAACU,uBADJ,EAEZT,qBAFY,CAAf;AAIF","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport {\n   firestore,\n   convertCollectionsSnapshotToMap\n} from '../../firebase/utils';\n\nimport {\n   fetchCollectionSuccess,\n   fetchCollectionsFailure\n} from '../actions/shopActions';\nimport { ShopActionTypes } from '../types';\n\nexport function* fetchCollectionsAsync() {\n   try {\n      const collectionRef = firestore.collection('collections');\n      const snapshot = yield collectionRef.get();\n      const collectionsMap = yield call(\n         convertCollectionsSnapshotToMap,\n         snapshot\n      );\n\n      yield put(fetchCollectionSuccess(collectionsMap));\n   } catch (err) {\n      yield put(fetchCollectionsFailure(err.message));\n   }\n}\n\nexport function* fetchCollectionsStart() {\n   yield takeEvery(\n      ShopActionTypes.FETCH_COLLECTIONS_START,\n      fetchCollectionsAsync\n   );\n}\n"]},"metadata":{},"sourceType":"module"}