{"ast":null,"code":"var _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/client/src/App.js\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Header from './components/header/Header';\nimport Spinner from './components/spinner/Spinner';\nimport ErrorBoundary from './components/error-boundary/Errorboundary';\nimport { checkUserSession } from './redux/actions/userActions';\nimport { selectCurrentUser } from './redux/selectors/userSelectors';\nimport { GlobalStyles } from './globalStyles';\nconst HomePage = lazy(() => import('./pages/home/HomePage'));\nconst ShopPage = lazy(() => import('./pages/shop/ShopPage'));\nconst SignInAndSignUpPage = lazy(() => import('./pages/sign-in-and-sign-up/SignInAndSignUpPage'));\nconst CheckoutPage = lazy(() => import('./pages/checkout/CheckoutPage'));\n\nconst App = ({\n  currentUser,\n  checkUserSession\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(GlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ErrorBoundary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))));\n};\n\nApp.propTypes = {\n  checkUserSession: PropTypes.func.isRequired,\n  currentUser: PropTypes.object\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/client/src/App.js"],"names":["React","useEffect","lazy","Suspense","PropTypes","Switch","Route","Redirect","connect","createStructuredSelector","Header","Spinner","ErrorBoundary","checkUserSession","selectCurrentUser","GlobalStyles","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","App","currentUser","propTypes","func","isRequired","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Header from './components/header/Header';\nimport Spinner from './components/spinner/Spinner';\nimport ErrorBoundary from './components/error-boundary/Errorboundary';\n\nimport { checkUserSession } from './redux/actions/userActions';\nimport { selectCurrentUser } from './redux/selectors/userSelectors';\n\nimport { GlobalStyles } from './globalStyles';\n\nconst HomePage = lazy(() => import('./pages/home/HomePage'));\nconst ShopPage = lazy(() => import('./pages/shop/ShopPage'));\nconst SignInAndSignUpPage = lazy(() =>\n   import('./pages/sign-in-and-sign-up/SignInAndSignUpPage')\n);\nconst CheckoutPage = lazy(() => import('./pages/checkout/CheckoutPage'));\n\nconst App = ({ currentUser, checkUserSession }) => {\n   useEffect(() => {\n      checkUserSession();\n   }, [checkUserSession]);\n\n   return (\n      <React.Fragment>\n         <GlobalStyles />\n         <Header />\n         <Switch>\n            <ErrorBoundary>\n               <Suspense fallback={<Spinner />}>\n                  <Route exact path='/' component={HomePage} />\n                  <Route path='/shop' component={ShopPage} />\n                  <Route exact path='/checkout' component={CheckoutPage} />\n                  <Route\n                     exact\n                     path='/signin'\n                     render={() =>\n                        currentUser ? (\n                           <Redirect to='/' />\n                        ) : (\n                           <SignInAndSignUpPage />\n                        )\n                     }\n                  />\n               </Suspense>\n            </ErrorBoundary>\n         </Switch>\n      </React.Fragment>\n   );\n};\n\nApp.propTypes = {\n   checkUserSession: PropTypes.func.isRequired,\n   currentUser: PropTypes.object\n};\n\nconst mapStateToProps = createStructuredSelector({\n   currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n   checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}