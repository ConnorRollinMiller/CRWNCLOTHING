{"ast":null,"code":"var _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/src/pages/shop/ShopPage.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport CollectionsPageContainer from '../collection/CollectionsPageContainer';\nimport { fetchCollectionsStart } from '../../redux/actions/shopActions';\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionsPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nShopPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  fetchCollectionsStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: collectionsMap => dispatch(fetchCollectionsStart(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/pages/shop/ShopPage.js"],"names":["React","useEffect","PropTypes","Route","connect","CollectionsOverviewContainer","CollectionsPageContainer","fetchCollectionsStart","ShopPage","match","path","propTypes","object","isRequired","func","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,wBAAP,MAAqC,wCAArC;AAEA,SAASC,qBAAT,QAAsC,iCAAtC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAAsC;AACpDN,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,qBAAqB;AACvB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACG;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AACG,IAAA,KAAK,MADR;AAEG,IAAA,IAAI,YAAKE,KAAK,CAACC,IAAX,CAFP;AAGG,IAAA,SAAS,EAAEL,4BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAMG,oBAAC,KAAD;AACG,IAAA,IAAI,YAAKI,KAAK,CAACC,IAAX,mBADP;AAEG,IAAA,SAAS,EAAEJ,wBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,CADH;AAaF,CAlBD;;AAoBAE,QAAQ,CAACG,SAAT,GAAqB;AAClBF,EAAAA,KAAK,EAAEP,SAAS,CAACU,MAAV,CAAiBC,UADN;AAElBN,EAAAA,qBAAqB,EAAEL,SAAS,CAACY,IAAV,CAAeD;AAFpB,CAArB;;AAKA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACrCT,EAAAA,qBAAqB,EAAEU,cAAc,IAClCD,QAAQ,CAACT,qBAAqB,CAACU,cAAD,CAAtB;AAF0B,CAAL,CAAnC;;AAKA,eAAeb,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport CollectionsPageContainer from '../collection/CollectionsPageContainer';\n\nimport { fetchCollectionsStart } from '../../redux/actions/shopActions';\n\nconst ShopPage = ({ match, fetchCollectionsStart }) => {\n   useEffect(() => {\n      fetchCollectionsStart();\n   }, []);\n\n   return (\n      <main className='shop-page'>\n         <Route\n            exact\n            path={`${match.path}`}\n            component={CollectionsOverviewContainer}\n         />\n         <Route\n            path={`${match.path}/:collectionId`}\n            component={CollectionsPageContainer}\n         />\n      </main>\n   );\n};\n\nShopPage.propTypes = {\n   match: PropTypes.object.isRequired,\n   fetchCollectionsStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n   fetchCollectionsStart: collectionsMap =>\n      dispatch(fetchCollectionsStart(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}