{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/utils';\nimport { ShopActionTypes } from '../types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  fetchCollectionsStart();\n  collectionRef.get().then(async snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionsMap));\n  }).catch(err => dispatch(fetchCollectionsFailure(err.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/redux/sagas/shopSagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","fetchCollectionsStart","get","then","snapshot","collectionsMap","dispatch","fetchCollectionSuccess","catch","err","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SACGC,SADH,EAEGC,+BAFH,QAGO,sBAHP;AAKA,SAASC,eAAT,QAAgC,UAAhC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAC,EAAAA,qBAAqB;AAErBF,EAAAA,aAAa,CACTG,GADJ,GAEIC,IAFJ,CAES,MAAMC,QAAN,IAAkB;AACrB,UAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AAEAE,IAAAA,QAAQ,CAACC,sBAAsB,CAACF,cAAD,CAAvB,CAAR;AACF,GANJ,EAOIG,KAPJ,CAOUC,GAAG,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,GAAG,CAACE,OAAL,CAAxB,CAPzB;AAQF;AAED,OAAO,UAAUV,qBAAV,GAAkC;AACtC,QAAMT,SAAS,CACZG,eAAe,CAACiB,uBADJ,EAEZhB,qBAFY,CAAf;AAIF","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport {\n   firestore,\n   convertCollectionsSnapshotToMap\n} from '../../firebase/utils';\n\nimport { ShopActionTypes } from '../types';\n\nexport function* fetchCollectionsAsync() {\n   yield console.log('I am fired');\n\n   const collectionRef = firestore.collection('collections');\n\n   fetchCollectionsStart();\n\n   collectionRef\n      .get()\n      .then(async snapshot => {\n         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\n         dispatch(fetchCollectionSuccess(collectionsMap));\n      })\n      .catch(err => dispatch(fetchCollectionsFailure(err.message)));\n}\n\nexport function* fetchCollectionsStart() {\n   yield takeEvery(\n      ShopActionTypes.FETCH_COLLECTIONS_START,\n      fetchCollectionsAsync\n   );\n}\n"]},"metadata":{},"sourceType":"module"}