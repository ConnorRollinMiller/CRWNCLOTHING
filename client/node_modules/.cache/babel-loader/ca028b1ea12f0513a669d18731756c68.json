{"ast":null,"code":"import _defineProperty from \"/Users/connormiller/Projects/Web/clothingstoreapp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/connormiller/Projects/Web/clothingstoreapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/connormiller/Projects/Web/clothingstoreapp/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/client/src/components/sign-in/SignIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n   margin: 10px 0;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n   display: flex;\\n   justify-content: space-between;\\n\\n   @media screen and (max-width: 800px) {\\n      // display: block;\\n      flex-direction: column;\\n   }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n   width: 48%;\\n   margin-right: 2%;\\n   display: flex;\\n   flex-direction: column;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput';\nimport Button from '../button/Button';\nimport { googleSignInStart, emailSignInStart } from '../../redux/actions/userActions';\nconst SignInContainer = styled.div(_templateObject());\nconst ButtonsContainer = styled.div(_templateObject2());\nconst SignInTitle = styled.h2(_templateObject3());\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setFormData(_objectSpread({}, formData, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const email = formData.email,\n          password = formData.password;\n    emailSignInStart(email, password);\n    setFormData({\n      email: '',\n      password: ''\n    });\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sign in with your email & password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    label: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    value: formData.email,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    value: formData.password,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(Button, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nSignIn.propTypes = {\n  googleSignInStart: PropTypes.func.isRequired,\n  emailSignInStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/client/src/components/sign-in/SignIn.js"],"names":["React","useState","PropTypes","styled","connect","FormInput","Button","googleSignInStart","emailSignInStart","SignInContainer","div","ButtonsContainer","SignInTitle","h2","SignIn","email","password","formData","setFormData","handleChange","e","target","name","value","handleSubmit","preventDefault","propTypes","func","isRequired","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/FormInput';\nimport Button from '../button/Button';\n\nimport {\n   googleSignInStart,\n   emailSignInStart\n} from '../../redux/actions/userActions';\n\nconst SignInContainer = styled.div`\n   width: 48%;\n   margin-right: 2%;\n   display: flex;\n   flex-direction: column;\n`;\n\nconst ButtonsContainer = styled.div`\n   display: flex;\n   justify-content: space-between;\n\n   @media screen and (max-width: 800px) {\n      // display: block;\n      flex-direction: column;\n   }\n`;\n\nconst SignInTitle = styled.h2`\n   margin: 10px 0;\n`;\n\nconst SignIn = ({ googleSignInStart, emailSignInStart }) => {\n   const [formData, setFormData] = useState({ email: '', password: '' });\n\n   const handleChange = e => {\n      const { name, value } = e.target;\n      setFormData({ ...formData, [name]: value });\n   };\n\n   const handleSubmit = async e => {\n      e.preventDefault();\n\n      const { email, password } = formData;\n\n      emailSignInStart(email, password);\n\n      setFormData({ email: '', password: '' });\n   };\n\n   return (\n      <SignInContainer>\n         <SignInTitle>I already have an account</SignInTitle>\n         <span>Sign in with your email & password</span>\n         <form onSubmit={handleSubmit}>\n            <FormInput\n               label='Email'\n               name='email'\n               type='email'\n               value={formData.email}\n               handleChange={handleChange}\n               required\n            />\n            <FormInput\n               label='Password'\n               name='password'\n               type='password'\n               value={formData.password}\n               handleChange={handleChange}\n               required\n            />\n            <ButtonsContainer>\n               <Button type='submit'>Sign in</Button>\n               <Button type='button' onClick={googleSignInStart} isGoogleSignIn>\n                  Sign in with Google\n               </Button>\n            </ButtonsContainer>\n         </form>\n      </SignInContainer>\n   );\n};\n\nSignIn.propTypes = {\n   googleSignInStart: PropTypes.func.isRequired,\n   emailSignInStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n   googleSignInStart: () => dispatch(googleSignInStart()),\n   emailSignInStart: (email, password) =>\n      dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}