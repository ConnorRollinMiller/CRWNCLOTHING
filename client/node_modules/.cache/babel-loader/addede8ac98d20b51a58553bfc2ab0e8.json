{"ast":null,"code":"import _defineProperty from \"/Users/connormiller/Projects/Web/clothingstoreapp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CartActionTypes } from '../types';\nimport { addItemToCart, removeItemFromCart } from '../cartUtils';\nconst intitialState = {\n  isHidden: true,\n  cartItems: []\n};\nexport default ((state = intitialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case CartActionTypes.TOGGLE_CART_DROPDOWN:\n      return _objectSpread({}, state, {\n        isHidden: !state.isHidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/client/src/redux/reducers/cartReducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","intitialState","isHidden","cartItems","state","action","type","payload","TOGGLE_CART_DROPDOWN","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,UAAhC;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAAtB;AAKA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAAA,QACvCC,IADuC,GACrBD,MADqB,CACvCC,IADuC;AAAA,QACjCC,OADiC,GACrBF,MADqB,CACjCE,OADiC;;AAG/C,UAAQD,IAAR;AACG,SAAKR,eAAe,CAACU,oBAArB;AACG,+BACMJ,KADN;AAEGF,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF;AAFpB;;AAIH,SAAKJ,eAAe,CAACW,QAArB;AACG,+BACML,KADN;AAEGD,QAAAA,SAAS,EAAEJ,aAAa,CAACK,KAAK,CAACD,SAAP,EAAkBI,OAAlB;AAF3B;;AAIH,SAAKT,eAAe,CAACY,WAArB;AACG,+BACMN,KADN;AAEGD,QAAAA,SAAS,EAAEH,kBAAkB,CAACI,KAAK,CAACD,SAAP,EAAkBI,OAAlB;AAFhC;;AAIH,SAAKT,eAAe,CAACa,oBAArB;AACG,+BACMP,KADN;AAEGD,QAAAA,SAAS,EAAEC,KAAK,CAACD,SAAN,CAAgBS,MAAhB,CACRC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACE,OAAP,CAAeO,EADnC;AAFd;;AAMH,SAAKhB,eAAe,CAACiB,UAArB;AACG,+BACMX,KADN;AAEGD,QAAAA,SAAS,EAAE;AAFd;;AAIH;AACG,aAAOC,KAAP;AA7BN;AA+BF,CAlCD","sourcesContent":["import { CartActionTypes } from '../types';\nimport { addItemToCart, removeItemFromCart } from '../cartUtils';\n\nconst intitialState = {\n   isHidden: true,\n   cartItems: []\n};\n\nexport default (state = intitialState, action) => {\n   const { type, payload } = action;\n\n   switch (type) {\n      case CartActionTypes.TOGGLE_CART_DROPDOWN:\n         return {\n            ...state,\n            isHidden: !state.isHidden\n         };\n      case CartActionTypes.ADD_ITEM:\n         return {\n            ...state,\n            cartItems: addItemToCart(state.cartItems, payload)\n         };\n      case CartActionTypes.REMOVE_ITEM:\n         return {\n            ...state,\n            cartItems: removeItemFromCart(state.cartItems, payload)\n         };\n      case CartActionTypes.CLEAR_ITEM_FROM_CART:\n         return {\n            ...state,\n            cartItems: state.cartItems.filter(\n               cartItem => cartItem.id !== action.payload.id\n            )\n         };\n      case CartActionTypes.CLEAR_CART:\n         return {\n            ...state,\n            cartItems: []\n         };\n      default:\n         return state;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}