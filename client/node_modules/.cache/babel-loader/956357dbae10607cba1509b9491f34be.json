{"ast":null,"code":"var _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/src/pages/shop/ShopPage.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/CollectionPage';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nimport { fetchCollectionsStartAsync } from '../../redux/actions/shopActions';\nimport { selectCollectionIsFetching } from '../../redux/selectors/shopSelectors';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/utils';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStartAsync,\n  isFetching\n}) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nShopPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  fetchCollectionsStartAsync: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectCollectionIsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: collectionsMap => dispatch(fetchCollectionsStartAsync(collectionsMap))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/pages/shop/ShopPage.js"],"names":["React","useEffect","PropTypes","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectCollectionIsFetching","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isFetching","path","props","isLoading","propTypes","object","isRequired","func","bool","mapStateToProps","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,SAASC,0BAAT,QAA2C,iCAA3C;AACA,SAASC,0BAAT,QAA2C,qCAA3C;AAEA,SACGC,SADH,EAEGC,+BAFH,QAGO,sBAHP;AAKA,MAAMC,8BAA8B,GAAGL,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGN,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMQ,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASP,EAAAA,0BAAT;AAAqCQ,EAAAA;AAArC,CAAD,KAAuD;AACrEhB,EAAAA,SAAS,CAAC,MAAM;AACbQ,IAAAA,0BAA0B;AAC5B,GAFQ,EAEN,EAFM,CAAT;AAIA,SACG;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AACG,IAAA,KAAK,MADR;AAEG,IAAA,IAAI,YAAKO,KAAK,CAACE,IAAX,CAFP;AAGG,IAAA,MAAM,EAAEC,KAAK,IACV,oBAAC,8BAAD;AACG,MAAA,SAAS,EAAEC;AADd,OAEOD,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAWG,oBAAC,KAAD;AACG,IAAA,IAAI,YAAKH,KAAK,CAACE,IAAX,mBADP;AAEG,IAAA,MAAM,EAAEC,KAAK,IACV,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEC;AAAtC,OAAqDD,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CADH;AAoBF,CAzBD;;AA2BAJ,QAAQ,CAACM,SAAT,GAAqB;AAClBL,EAAAA,KAAK,EAAEd,SAAS,CAACoB,MAAV,CAAiBC,UADN;AAElBd,EAAAA,0BAA0B,EAAEP,SAAS,CAACsB,IAAV,CAAeD,UAFzB;AAGlBN,EAAAA,UAAU,EAAEf,SAAS,CAACuB,IAAV,CAAeF;AAHT,CAArB;AAMA,MAAMG,eAAe,GAAGrB,wBAAwB,CAAC;AAC9CY,EAAAA,UAAU,EAAEP;AADkC,CAAD,CAAhD;;AAIA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACrCnB,EAAAA,0BAA0B,EAAEoB,cAAc,IACvCD,QAAQ,CAACnB,0BAA0B,CAACoB,cAAD,CAA3B;AAF0B,CAAL,CAAnC;;AAKA,eAAezB,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/CollectionPage';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\n\nimport { fetchCollectionsStartAsync } from '../../redux/actions/shopActions';\nimport { selectCollectionIsFetching } from '../../redux/selectors/shopSelectors';\n\nimport {\n   firestore,\n   convertCollectionsSnapshotToMap\n} from '../../firebase/utils';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match, fetchCollectionsStartAsync, isFetching }) => {\n   useEffect(() => {\n      fetchCollectionsStartAsync();\n   }, []);\n\n   return (\n      <main className='shop-page'>\n         <Route\n            exact\n            path={`${match.path}`}\n            render={props => (\n               <CollectionsOverviewWithSpinner\n                  isLoading={isLoading}\n                  {...props}\n               />\n            )}\n         />\n         <Route\n            path={`${match.path}/:collectionId`}\n            render={props => (\n               <CollectionPageWithSpinner isLoading={isLoading} {...props} />\n            )}\n         />\n      </main>\n   );\n};\n\nShopPage.propTypes = {\n   match: PropTypes.object.isRequired,\n   fetchCollectionsStartAsync: PropTypes.func.isRequired,\n   isFetching: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = createStructuredSelector({\n   isFetching: selectCollectionIsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n   fetchCollectionsStartAsync: collectionsMap =>\n      dispatch(fetchCollectionsStartAsync(collectionsMap))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}