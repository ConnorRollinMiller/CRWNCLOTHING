{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/connormiller/Projects/Web/clothingstoreapp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/src/components/checkout-item/CheckoutItem.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n   width: 23%;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n   width: 23%;\\n   padding-right: 15px;\\n\\n   img {\\n      width: 100%;\\n      height: 100%;\\n   }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n   width: 100%;\\n   display: flex;\\n   min-height: 100px;\\n   border-bottom: 1px solid darkgrey;\\n   padding: 15px 0;\\n   font-size: 20px;\\n   align-items: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/actions/cartActions';\nconst CheckoutItemContainer = styled.div(_templateObject());\nconst ImageContainer = styled.div(_templateObject2());\nconst TextContainer = styled.span(_templateObject3());\n\nconst CheckoutItem = ({\n  cartItem,\n  removeItem,\n  addItem,\n  clearItem\n}) => {\n  const name = cartItem.name,\n        imageUrl = cartItem.imageUrl,\n        price = cartItem.price,\n        quantity = cartItem.quantity;\n  return React.createElement(CheckoutItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ImageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arrow\",\n    onClick: () => removeItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\u276E\"), React.createElement(\"span\", {\n    className: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, quantity), React.createElement(\"div\", {\n    className: \"arrow\",\n    onClick: () => addItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"\\u276F\")), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, price), React.createElement(\"div\", {\n    className: \"remove-button\",\n    onClick: () => clearItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\u2715\"));\n};\n\nCheckoutItem.propTypes = {\n  cartItem: PropTypes.object.isRequired,\n  clearItem: PropTypes.func.isRequired,\n  addItem: PropTypes.func.isRequired,\n  removeItem: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: cartItem => dispatch(clearItemFromCart(cartItem)),\n  addItem: cartItem => dispatch(addItem(cartItem)),\n  removeItem: cartItem => dispatch(removeItem(cartItem))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/components/checkout-item/CheckoutItem.js"],"names":["React","PropTypes","styled","connect","clearItemFromCart","addItem","removeItem","CheckoutItemContainer","div","ImageContainer","TextContainer","span","CheckoutItem","cartItem","clearItem","name","imageUrl","price","quantity","propTypes","object","isRequired","func","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport {\n   clearItemFromCart,\n   addItem,\n   removeItem\n} from '../../redux/actions/cartActions';\n\nconst CheckoutItemContainer = styled.div`\n   width: 100%;\n   display: flex;\n   min-height: 100px;\n   border-bottom: 1px solid darkgrey;\n   padding: 15px 0;\n   font-size: 20px;\n   align-items: center;\n`;\n\nconst ImageContainer = styled.div`\n   width: 23%;\n   padding-right: 15px;\n\n   img {\n      width: 100%;\n      height: 100%;\n   }\n`;\n\nconst TextContainer = styled.span`\n   width: 23%;\n`;\n\nconst CheckoutItem = ({ cartItem, removeItem, addItem, clearItem }) => {\n   const { name, imageUrl, price, quantity } = cartItem;\n\n   return (\n      <CheckoutItemContainer>\n         <ImageContainer>\n            <img src={imageUrl} alt='item' />\n         </ImageContainer>\n         <TextContainer>{name}</TextContainer>\n         <span className='quantity'>\n            <div className='arrow' onClick={() => removeItem(cartItem)}>\n               &#10094;\n            </div>\n            <span className='value'>{quantity}</span>\n            <div className='arrow' onClick={() => addItem(cartItem)}>\n               &#10095;\n            </div>\n         </span>\n         <TextContainer>{price}</TextContainer>\n         <div className='remove-button' onClick={() => clearItem(cartItem)}>\n            &#10005;\n         </div>\n      </CheckoutItemContainer>\n   );\n};\n\nCheckoutItem.propTypes = {\n   cartItem: PropTypes.object.isRequired,\n   clearItem: PropTypes.func.isRequired,\n   addItem: PropTypes.func.isRequired,\n   removeItem: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n   clearItem: cartItem => dispatch(clearItemFromCart(cartItem)),\n   addItem: cartItem => dispatch(addItem(cartItem)),\n   removeItem: cartItem => dispatch(removeItem(cartItem))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\n"]},"metadata":{},"sourceType":"module"}