{"ast":null,"code":"var _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/src/pages/shop/ShopPage.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport CollectionPage from '../collection/CollectionPage';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nimport { fetchCollectionsStartAsync } from '../../redux/actions/shopActions';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStartAsync,\n  isCollectionsLoaded\n}) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !isCollectionsLoaded\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nShopPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  fetchCollectionsStartAsync: PropTypes.func.isRequired,\n  isCollectionsLoaded: PropTypes.bool.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: collectionsMap => dispatch(fetchCollectionsStartAsync(collectionsMap))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/pages/shop/ShopPage.js"],"names":["React","useEffect","PropTypes","Route","connect","createStructuredSelector","CollectionsOverviewContainer","CollectionPage","WithSpinner","fetchCollectionsStartAsync","CollectionPageWithSpinner","ShopPage","match","isCollectionsLoaded","path","props","propTypes","object","isRequired","func","bool","mapStateToProps","selectIsCollectionsLoaded","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,MAAMC,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMI,QAAQ,GAAG,CAAC;AACfC,EAAAA,KADe;AAEfH,EAAAA,0BAFe;AAGfI,EAAAA;AAHe,CAAD,KAIX;AACHZ,EAAAA,SAAS,CAAC,MAAM;AACbQ,IAAAA,0BAA0B;AAC5B,GAFQ,EAEN,EAFM,CAAT;AAIA,SACG;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AACG,IAAA,KAAK,MADR;AAEG,IAAA,IAAI,YAAKG,KAAK,CAACE,IAAX,CAFP;AAGG,IAAA,SAAS,EAAER,4BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAMG,oBAAC,KAAD;AACG,IAAA,IAAI,YAAKM,KAAK,CAACE,IAAX,mBADP;AAEG,IAAA,MAAM,EAAEC,KAAK,IACV,oBAAC,yBAAD;AACG,MAAA,SAAS,EAAE,CAACF;AADf,OAEOE,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,CADH;AAkBF,CA3BD;;AA6BAJ,QAAQ,CAACK,SAAT,GAAqB;AAClBJ,EAAAA,KAAK,EAAEV,SAAS,CAACe,MAAV,CAAiBC,UADN;AAElBT,EAAAA,0BAA0B,EAAEP,SAAS,CAACiB,IAAV,CAAeD,UAFzB;AAGlBL,EAAAA,mBAAmB,EAAEX,SAAS,CAACkB,IAAV,CAAeF;AAHlB,CAArB;AAMA,MAAMG,eAAe,GAAGhB,wBAAwB,CAAC;AAC9CQ,EAAAA,mBAAmB,EAAES;AADyB,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACrCf,EAAAA,0BAA0B,EAAEgB,cAAc,IACvCD,QAAQ,CAACf,0BAA0B,CAACgB,cAAD,CAA3B;AAF0B,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport CollectionPage from '../collection/CollectionPage';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\n\nimport { fetchCollectionsStartAsync } from '../../redux/actions/shopActions';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n   match,\n   fetchCollectionsStartAsync,\n   isCollectionsLoaded\n}) => {\n   useEffect(() => {\n      fetchCollectionsStartAsync();\n   }, []);\n\n   return (\n      <main className='shop-page'>\n         <Route\n            exact\n            path={`${match.path}`}\n            component={CollectionsOverviewContainer}\n         />\n         <Route\n            path={`${match.path}/:collectionId`}\n            render={props => (\n               <CollectionPageWithSpinner\n                  isLoading={!isCollectionsLoaded}\n                  {...props}\n               />\n            )}\n         />\n      </main>\n   );\n};\n\nShopPage.propTypes = {\n   match: PropTypes.object.isRequired,\n   fetchCollectionsStartAsync: PropTypes.func.isRequired,\n   isCollectionsLoaded: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = createStructuredSelector({\n   isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n   fetchCollectionsStartAsync: collectionsMap =>\n      dispatch(fetchCollectionsStartAsync(collectionsMap))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}