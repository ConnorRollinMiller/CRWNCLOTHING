{"ast":null,"code":"var _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/src/pages/shop/ShopPage.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport CollectionPageContainer from '../collection/CollectionPageContainer';\nimport { fetchCollectionsStartAsync } from '../../redux/actions/shopActions';\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStartAsync,\n  isCollectionsLoaded\n}) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nShopPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  fetchCollectionsStartAsync: PropTypes.func.isRequired,\n  isCollectionsLoaded: PropTypes.bool.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: collectionsMap => dispatch(fetchCollectionsStartAsync(collectionsMap))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/pages/shop/ShopPage.js"],"names":["React","useEffect","PropTypes","Route","connect","createStructuredSelector","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStartAsync","ShopPage","match","isCollectionsLoaded","path","propTypes","object","isRequired","func","bool","mapStateToProps","selectIsCollectionsLoaded","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,uBAAP,MAAoC,uCAApC;AAEA,SAASC,0BAAT,QAA2C,iCAA3C;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AACfC,EAAAA,KADe;AAEfF,EAAAA,0BAFe;AAGfG,EAAAA;AAHe,CAAD,KAIX;AACHV,EAAAA,SAAS,CAAC,MAAM;AACbO,IAAAA,0BAA0B;AAC5B,GAFQ,EAEN,EAFM,CAAT;AAIA,SACG;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AACG,IAAA,KAAK,MADR;AAEG,IAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,CAFP;AAGG,IAAA,SAAS,EAAEN,4BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAMG,oBAAC,KAAD;AACG,IAAA,IAAI,YAAKI,KAAK,CAACE,IAAX,mBADP;AAEG,IAAA,SAAS,EAAEL,uBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,CADH;AAaF,CAtBD;;AAwBAE,QAAQ,CAACI,SAAT,GAAqB;AAClBH,EAAAA,KAAK,EAAER,SAAS,CAACY,MAAV,CAAiBC,UADN;AAElBP,EAAAA,0BAA0B,EAAEN,SAAS,CAACc,IAAV,CAAeD,UAFzB;AAGlBJ,EAAAA,mBAAmB,EAAET,SAAS,CAACe,IAAV,CAAeF;AAHlB,CAArB;AAMA,MAAMG,eAAe,GAAGb,wBAAwB,CAAC;AAC9CM,EAAAA,mBAAmB,EAAEQ;AADyB,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACrCb,EAAAA,0BAA0B,EAAEc,cAAc,IACvCD,QAAQ,CAACb,0BAA0B,CAACc,cAAD,CAA3B;AAF0B,CAAL,CAAnC;;AAKA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport CollectionPageContainer from '../collection/CollectionPageContainer';\n\nimport { fetchCollectionsStartAsync } from '../../redux/actions/shopActions';\n\nconst ShopPage = ({\n   match,\n   fetchCollectionsStartAsync,\n   isCollectionsLoaded\n}) => {\n   useEffect(() => {\n      fetchCollectionsStartAsync();\n   }, []);\n\n   return (\n      <main className='shop-page'>\n         <Route\n            exact\n            path={`${match.path}`}\n            component={CollectionsOverviewContainer}\n         />\n         <Route\n            path={`${match.path}/:collectionId`}\n            component={CollectionPageContainer}\n         />\n      </main>\n   );\n};\n\nShopPage.propTypes = {\n   match: PropTypes.object.isRequired,\n   fetchCollectionsStartAsync: PropTypes.func.isRequired,\n   isCollectionsLoaded: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = createStructuredSelector({\n   isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n   fetchCollectionsStartAsync: collectionsMap =>\n      dispatch(fetchCollectionsStartAsync(collectionsMap))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}