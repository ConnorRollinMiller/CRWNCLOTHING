{"ast":null,"code":"var _jsxFileName = \"/Users/connormiller/Projects/Web/clothingstoreapp/client/src/pages/shop/ShopPage.js\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/spinner/Spinner';\nimport { fetchCollectionsStart } from '../../redux/actions/shopActions';\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/CollectionsOverviewContainer'));\nconst CollectionsPageContainer = lazy(() => import('../collection/CollectionsPageContainer'));\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return React.createElement(\"main\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionsPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nShopPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  fetchCollectionsStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: collectionsMap => dispatch(fetchCollectionsStart(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/client/src/pages/shop/ShopPage.js"],"names":["React","useEffect","lazy","Suspense","PropTypes","Route","connect","Spinner","fetchCollectionsStart","CollectionsOverviewContainer","CollectionsPageContainer","ShopPage","match","path","propTypes","object","isRequired","func","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,SAASC,qBAAT,QAAsC,iCAAtC;AAEA,MAAMC,4BAA4B,GAAGP,IAAI,CAAC,MACvC,OAAO,oEAAP,CADsC,CAAzC;AAGA,MAAMQ,wBAAwB,GAAGR,IAAI,CAAC,MACnC,OAAO,wCAAP,CADkC,CAArC;;AAIA,MAAMS,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASJ,EAAAA;AAAT,CAAD,KAAsC;AACpDP,EAAAA,SAAS,CAAC,MAAM;AACbO,IAAAA,qBAAqB;AACvB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,SACG;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AACG,IAAA,KAAK,MADR;AAEG,IAAA,IAAI,YAAKI,KAAK,CAACC,IAAX,CAFP;AAGG,IAAA,SAAS,EAAEJ,4BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAMG,oBAAC,KAAD;AACG,IAAA,IAAI,YAAKG,KAAK,CAACC,IAAX,mBADP;AAEG,IAAA,SAAS,EAAEH,wBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,CADH,CADH;AAeF,CApBD;;AAsBAC,QAAQ,CAACG,SAAT,GAAqB;AAClBF,EAAAA,KAAK,EAAER,SAAS,CAACW,MAAV,CAAiBC,UADN;AAElBR,EAAAA,qBAAqB,EAAEJ,SAAS,CAACa,IAAV,CAAeD;AAFpB,CAArB;;AAKA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACrCX,EAAAA,qBAAqB,EAAEY,cAAc,IAClCD,QAAQ,CAACX,qBAAqB,CAACY,cAAD,CAAtB;AAF0B,CAAL,CAAnC;;AAKA,eAAed,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Spinner from '../../components/spinner/Spinner';\n\nimport { fetchCollectionsStart } from '../../redux/actions/shopActions';\n\nconst CollectionsOverviewContainer = lazy(() =>\n   import('../../components/collections-overview/CollectionsOverviewContainer')\n);\nconst CollectionsPageContainer = lazy(() =>\n   import('../collection/CollectionsPageContainer')\n);\n\nconst ShopPage = ({ match, fetchCollectionsStart }) => {\n   useEffect(() => {\n      fetchCollectionsStart();\n   }, [fetchCollectionsStart]);\n\n   return (\n      <main className='shop-page'>\n         <Suspense fallback={<Spinner />}>\n            <Route\n               exact\n               path={`${match.path}`}\n               component={CollectionsOverviewContainer}\n            />\n            <Route\n               path={`${match.path}/:collectionId`}\n               component={CollectionsPageContainer}\n            />\n         </Suspense>\n      </main>\n   );\n};\n\nShopPage.propTypes = {\n   match: PropTypes.object.isRequired,\n   fetchCollectionsStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n   fetchCollectionsStart: collectionsMap =>\n      dispatch(fetchCollectionsStart(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}