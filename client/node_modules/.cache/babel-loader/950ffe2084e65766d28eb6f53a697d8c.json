{"ast":null,"code":"import _defineProperty from \"/Users/connormiller/Projects/Web/clothingstoreapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ShopActionTypes } from '../types';\nconst initialState = {\n  collections: null\n};\nexport default ((state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case ShopActionTypes.UPDATE_COLLECTIONS:\n      return _objectSpread({}, state, {\n        collections: payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/redux/reducers/shopReducer.js"],"names":["ShopActionTypes","initialState","collections","state","action","type","payload","UPDATE_COLLECTIONS"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,UAAhC;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAAA,QACtCC,IADsC,GACpBD,MADoB,CACtCC,IADsC;AAAA,QAChCC,OADgC,GACpBF,MADoB,CAChCE,OADgC;;AAG9C,UAAQD,IAAR;AACG,SAAKL,eAAe,CAACO,kBAArB;AACG,+BACMJ,KADN;AAEGD,QAAAA,WAAW,EAAEI;AAFhB;;AAIH;AACG,aAAOH,KAAP;AAPN;AASF,CAZD","sourcesContent":["import { ShopActionTypes } from '../types';\n\nconst initialState = {\n   collections: null\n};\n\nexport default (state = initialState, action) => {\n   const { type, payload } = action;\n\n   switch (type) {\n      case ShopActionTypes.UPDATE_COLLECTIONS:\n         return {\n            ...state,\n            collections: payload\n         };\n      default:\n         return state;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}