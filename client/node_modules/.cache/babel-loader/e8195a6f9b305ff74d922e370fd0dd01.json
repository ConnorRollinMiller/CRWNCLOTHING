{"ast":null,"code":"import _defineProperty from \"/Users/connormiller/Projects/Web/clothingstoreapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from '../types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from '../actions/userActions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error.message));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/connormiller/Projects/Web/clothingstoreapp/src/redux/sagas/userSagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","message","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","signInAfterSignUp","additionalData","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from '../types';\nimport {\n   auth,\n   googleProvider,\n   createUserProfileDocument,\n   getCurrentUser\n} from '../../firebase/utils';\nimport {\n   signInSuccess,\n   signInFailure,\n   signOutSuccess,\n   signOutFailure,\n   signUpSuccess,\n   signUpFailure\n} from '../actions/userActions';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n   try {\n      const userRef = yield call(createUserProfileDocument, userAuth);\n      const userSnapshot = yield userRef.get();\n\n      yield put(\n         signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n         })\n      );\n   } catch (error) {\n      yield put(signInFailure(error));\n   }\n}\n\nexport function* signInWithGoogle() {\n   try {\n      const { user } = yield auth.signInWithPopup(googleProvider);\n      yield getSnapshotFromUserAuth(user);\n   } catch (error) {\n      yield put(signInFailure(error));\n   }\n}\n\nexport function* onGoogleSignInStart() {\n   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n   try {\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\n      yield getSnapshotFromUserAuth(user);\n   } catch (error) {\n      put(signInFailure(error.message));\n   }\n}\n\nexport function* onEmailSignInStart() {\n   yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n   try {\n      const userAuth = yield getCurrentUser();\n      if (!userAuth) return;\n      yield getSnapshotFromUserAuth(userAuth);\n   } catch (error) {\n      yield put(signInFailure(error));\n   }\n}\n\nexport function* onCheckUserSession() {\n   yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n   try {\n      yield auth.signOut();\n      yield put(signOutSuccess());\n   } catch (error) {\n      yield put(signOutFailure(error));\n   }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n   yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onSignOutStart() {\n   yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* signUp({ payload: { displayName, email, password } }) {\n   try {\n      const { user } = yield auth.createUserWithEmailAndPassword(\n         email,\n         password\n      );\n      yield put(signUpSuccess({ user, additionalData: { displayName } }));\n   } catch (error) {\n      yield put(signUpFailure(error));\n   }\n}\n\nexport function* onSignUpStart() {\n   yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n   yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport default function* userSagas() {\n   yield all([\n      call(onGoogleSignInStart),\n      call(onEmailSignInStart),\n      call(onCheckUserSession),\n      call(onSignOutStart),\n      call(onSignUpStart)\n   ]);\n}\n"]},"metadata":{},"sourceType":"module"}